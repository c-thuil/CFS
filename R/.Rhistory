#                     plot_image()
#                   )
)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
row = ic_types[i,"row"]
col = ic_types[i,"col"]
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(row = row, col = col))
}
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
grid = list(
columns =dim(data@images$slice1@image)[1],
rows = dim(data@images$slice1@image)[2]
)#,
#                   images = list(
#                     plot_image()
#                   )
)
print(fig)
typeof(ic_types[i,"row"])
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"],0.01)
y = c(ic_types[i,"col"],0.01)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"],0.1)
y = c(ic_types[i,"col"],0.1)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
View(ic_types)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"imagerow"],0.1)
y = c(ic_types[i,"imagecol"],0.1)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
fig <- plot_ly(type = 'pie')
fig <- plot_ly(type = 'pie')
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[1,5:2+length(type)][which(ic_types[1,5:2+length(type)] != 0)])
, values = as.double(ic_types[1,5:2+length(type)][which(ic_types[1,5:2+length(type)] != 0)]),
name = rownames(ic_types[1,]), domain = list(x = c(0,0.5), y = c(0,0.5)))
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[1,5:2+length(type)][which(ic_types[1,5:2+length(type)] != 0)])
, values = as.double(ic_types[1,5:2+length(type)][which(ic_types[1,5:2+length(type)] != 0)]),
name = rownames(ic_types[1,]), domain = list(x = c(0.5,1), y = c(0.5,1)))
print(fig)
dim(data@images$slice1@image)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/dim(data@images$slice1@image)[1],0.1)
y = c(ic_types[i,"col"]/dim(data@images$slice1@image)[2],0.1)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/dim(data@images$slice1@image)[1],0.1)
y = c(1/(ic_types[i,"col"]/dim(data@images$slice1@image)[2]),0.1)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
View(ic_types)
max(ic_types["col"])
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["col"]),0.1)
y = c((ic_types[i,"col"]/max(ic_types["row"])),0.1)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"]),0.1)
y = c((ic_types[i,"col"]/max(ic_types["col"])),0.1)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"]),(ic_types[i,"row"]/max(ic_types["row"]))+0.1)
y = c((ic_types[i,"col"]/max(ic_types["col"])),(ic_types[i,"col"]/max(ic_types["col"]))+0.1)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
View(ic_types)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"]),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"])
y = c((ic_types[i,"col"]/max(ic_types["col"])),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"])
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])ic_types[i,"sum_IC"]/2,(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"])
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/2),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"])
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/2),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"])
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/2),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/2)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/2),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/2)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
type=c(48,13,18,26)
ic_types=data@reductions$ica@cell.embeddings[,type]
ic_types<-apply(ic_types,2,function(x){x=ifelse(x<=0,0,x); return(x)})
View(ic_types)
#We normalize by the sum
sum_IC<-apply(ic_types,2,function(x){x=x/sum(x); return(x)})
View(ic_types)
View(sum_IC)
#we calculate the factor of size to reduce pie size where IC are low
sum_IC=sqrt((rowSums(sum_IC)/max(rowSums(sum_IC))))
#ic_types<-apply(ic_types,1,function(x){x/sum(x); return(x)})
# We build the final object
ic_types<-cbind(data@images$slice1@coordinates,ic_types) %>%  cbind(.,sum_IC)
View(ic_types)
ic_types <- ic_types[rowSums(ic_types[,5:2+length(type)])>0,]
View(p)
View(ic_types)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/200),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/200)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/200),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/200)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/100),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/100)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/100),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/100)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/50),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/50)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/50),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/50)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/20),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/20)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/20),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/20),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/20)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/20),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y))
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/20),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/20)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/20),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = FALSE)
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/20),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/20)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/20),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE)
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:10) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/20),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/20)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/20),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/20),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/20)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/20),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/20),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/20)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/20),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/20),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/20)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/20),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
showlegend = TRUE,
images = list(
plot_image()
)
)
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/20),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/20)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/20),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
showlegend = TRUE,
images = list(
source = raster2uri(raster::as.raster(data@images$slice1@image)),
xref = 'x',
yref =  'y',
sizex = dim(data@images$slice1@image)[1],
sizey = dim(data@images$slice1@image)[2],
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = -10,
y = -4,
yanchor = 'top',
xanchor = 'left'
)
)
View(fig)
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/20),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/20)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/20),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
showlegend = TRUE,
images = list(
source = raster2uri(raster::as.raster(data@images$slice1@image)),
xref = 'x',
yref =  'y',
sizex = dim(data@images$slice1@image)[1],
sizey = dim(data@images$slice1@image)[2],
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = -10,
y = -4,
yanchor = 'top',
xanchor = 'left'
)
)
print(fig)
raster::as.raster(data@images$slice1@image)
data@images$slice1@image
fig <- plot_ly(type = 'pie')
fig <- fig %>% add_trace(fig, type="image", z= data@images$slice1@image)
print(fig)
data@images$slice1@image
view(data@images$slice1@image)
fig <- plot_ly(type = 'pie')
fig <- fig %>% add_trace(fig, type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)))
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/20),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/20)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/20),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig <- fig %>% add_trace(fig, type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)))
print(fig)
fig <- plot_ly(type = 'pie')
fig <- fig %>% add_trace(fig, type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)), opacity = 1)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=FALSE),
showlegend = TRUE
)
print(fig)
fig <- plot_ly(type = 'pie')
fig <- fig %>% add_trace(fig, type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)), opacity = 1)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=TRUE),
showlegend = TRUE
)
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
x = c(ic_types[i,"row"]/max(ic_types["row"])-(ic_types[i,"sum_IC"]/20),(ic_types[i,"row"]/max(ic_types["row"]))+ic_types[i,"sum_IC"]/20)
y = c((ic_types[i,"col"]/max(ic_types["col"]))-(ic_types[i,"sum_IC"]/20),(ic_types[i,"col"]/max(ic_types["col"]))+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig <- fig %>% add_trace(fig, type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)), opacity = 1)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=TRUE),
showlegend = TRUE
)
print(fig)
launchShiny()
launchShiny()
launchShiny <- function(
mode = "open",
maxFileSize = 15000,
file_to_load = NULL,
welcome_message = NULL,
projections_show_hover_info = TRUE,
...
){
##--------------------------------------------------------------------------##
## Create global variable with options that need to be available inside the
## Shiny app.
##--------------------------------------------------------------------------##
Shiny.options <<- list(
"mode" = mode,
"file_to_load" = file_to_load,
"welcome_message" = welcome_message,
"shiny_root" = "/home/c_thuilliez/Desktop/scRNAS_CT/Shiny/",
"projections_show_hover_info" = projections_show_hover_info
)
##--------------------------------------------------------------------------##
## Allow upload of files up to 800 MB.
##--------------------------------------------------------------------------##
options(shiny.maxRequestSize = maxFileSize * 1024^2)
##--------------------------------------------------------------------------##
## Load server and UI functions.
##--------------------------------------------------------------------------##
source(
"/home/c_thuilliez/Desktop/scRNAS_CT/Shiny/shiny_UI.R",
local = TRUE
)
source(
"/home/c_thuilliez/Desktop/scRNAS_CT/Shiny/shiny_server.R",
local = TRUE
)
##--------------------------------------------------------------------------##
## Launch Shiny.
##--------------------------------------------------------------------------##
message(
paste0(
'##---------------------------------------------------------------------------##\n',
'## Launching Shiny\n',
'##---------------------------------------------------------------------------##'
)
)
shiny::shinyApp(
ui = ui,
server = server,
...
)
}
launchShiny()
launchShiny()
launchShiny()
launchShiny()
launchShiny()
launchShiny()
launchShiny()
launchShiny <- function(
mode = "open",
maxFileSize = 15000,
file_to_load = NULL,
welcome_message = NULL,
projections_show_hover_info = TRUE,
...
){
##--------------------------------------------------------------------------##
## Create global variable with options that need to be available inside the
## Shiny app.
##--------------------------------------------------------------------------##
Shiny.options <<- list(
"mode" = mode,
"file_to_load" = file_to_load,
"welcome_message" = welcome_message,
"shiny_root" = "/home/c_thuilliez/Desktop/scRNAS_CT/Shiny/",
"projections_show_hover_info" = projections_show_hover_info
)
##--------------------------------------------------------------------------##
## Allow upload of files up to 800 MB.
##--------------------------------------------------------------------------##
options(shiny.maxRequestSize = maxFileSize * 1024^2)
##--------------------------------------------------------------------------##
## Load server and UI functions.
##--------------------------------------------------------------------------##
source(
"/home/c_thuilliez/Desktop/scRNAS_CT/Shiny/shiny_UI.R",
local = TRUE
)
source(
"/home/c_thuilliez/Desktop/scRNAS_CT/Shiny/shiny_server.R",
local = TRUE
)
##--------------------------------------------------------------------------##
## Launch Shiny.
##--------------------------------------------------------------------------##
message(
paste0(
'##---------------------------------------------------------------------------##\n',
'## Launching Shiny\n',
'##---------------------------------------------------------------------------##'
)
)
shiny::shinyApp(
ui = ui,
server = server,
...
)
}
launchShiny()
launchShiny()
