launchShiny <- function(
mode = "open",
maxFileSize = 800,
file_to_load = NULL,
welcome_message = NULL,
projections_show_hover_info = TRUE,
...
){
##--------------------------------------------------------------------------##
## Check validity of input parameters.
##--------------------------------------------------------------------------##
if ( mode %in% c('open','closed') == FALSE ) {
stop(
"'mode' parameter must be set to either 'open' or 'closed'.",
call. = FALSE
)
}
if ( projections_show_hover_info %in% c(TRUE, FALSE) == FALSE ) {
stop(
"'projections_show_hover_info' parameter must be set to either TRUE or FALSE.",
call. = FALSE
)
}
##--------------------------------------------------------------------------##
## Create global variable with options that need to be available inside the
## Shiny app.
##--------------------------------------------------------------------------##
Shiny.options <<- list(
"mode" = mode,
"file_to_load" = file_to_load,
"welcome_message" = welcome_message,
"shiny_root" = "/home/c_thuilliez/Desktop/scRNAS_CT/Shiny/",
"projections_show_hover_info" = projections_show_hover_info
)
##--------------------------------------------------------------------------##
## Allow upload of files up to 800 MB.
##--------------------------------------------------------------------------##
options(shiny.maxRequestSize = maxFileSize * 1024^2)
##--------------------------------------------------------------------------##
## Load server and UI functions.
##--------------------------------------------------------------------------##
source(
"/home/c_thuilliez/Desktop/scRNAS_CT/Shiny/shiny_UI.R",
local = TRUE
)
source(
"/home/c_thuilliez/Desktop/scRNAS_CT/Shiny/shiny_server.R",
local = TRUE
)
##--------------------------------------------------------------------------##
## Launch Shiny.
##--------------------------------------------------------------------------##
message(
paste0(
'##---------------------------------------------------------------------------##\n',
'## Launching Shiny\n',
'##---------------------------------------------------------------------------##'
)
)
shiny::shinyApp(
ui = ui,
server = server,
...
)
}
launchShiny()
launchShiny()
launchShiny()
launchShiny <- function(
mode = "open",
maxFileSize = 800,
file_to_load = NULL,
welcome_message = NULL,
projections_show_hover_info = TRUE,
...
){
##--------------------------------------------------------------------------##
## Create global variable with options that need to be available inside the
## Shiny app.
##--------------------------------------------------------------------------##
Shiny.options <<- list(
"mode" = mode,
"file_to_load" = file_to_load,
"welcome_message" = welcome_message,
"shiny_root" = "/home/c_thuilliez/Desktop/scRNAS_CT/Shiny/",
"projections_show_hover_info" = projections_show_hover_info
)
##--------------------------------------------------------------------------##
## Allow upload of files up to 800 MB.
##--------------------------------------------------------------------------##
options(shiny.maxRequestSize = maxFileSize * 1024^2)
##--------------------------------------------------------------------------##
## Load server and UI functions.
##--------------------------------------------------------------------------##
source(
"/home/c_thuilliez/Desktop/scRNAS_CT/Shiny/shiny_UI.R",
local = TRUE
)
source(
"/home/c_thuilliez/Desktop/scRNAS_CT/Shiny/shiny_server.R",
local = TRUE
)
##--------------------------------------------------------------------------##
## Launch Shiny.
##--------------------------------------------------------------------------##
message(
paste0(
'##---------------------------------------------------------------------------##\n',
'## Launching Shiny\n',
'##---------------------------------------------------------------------------##'
)
)
shiny::shinyApp(
ui = ui,
server = server,
...
)
}
launchShiny()
data <- readRDS("/home/c_thuilliez/Desktop/Project/data.rds")
IC_C = input[["IC_enrichment_IC_choice"]]
IC_C = "IC_1"
View(data)
database_C = "GO_Biological_Process_2015"
table <- data@misc[[IC_C]]$en[[database_C]]
table["Overlap"] <- lapply(table["Overlap"], sub, pattern="/.*", replacement="")
x <- c("0",table["Overlap"][1:30,])
y <- c("No",table["Term"][1:30,])
View(table)
x
x <- c("0",table["Overlap"][1:30,])
y <- c("No",table["Term"][1:30,])
plot_ly(
x = x,
y = y,
name = paste0("Enrichment:"),
type = "bar",
orientation = 'h',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = input$select_color_IC_enrichment,
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE
)
) %>% layout(coloraxis=list(colorscale='Jet'),
yaxis = list(title = 'Enrichment', tickfont = list(size = 5)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
plot_ly(
x = x,
y = y,
name = paste0("Enrichment:"),
type = "bar",
orientation = 'h',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE
)
) %>% layout(coloraxis=list(colorscale='Jet'),
yaxis = list(title = 'Enrichment', tickfont = list(size = 5)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
plot_ly(
x = x,
y = y,
name = paste0("Enrichment:"),
type = "bar",
orientation = 'h',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE
)
) %>% layout(coloraxis=list(colorscale='Jet'),
yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
plot_ly(
x = x,
y = y,
name = paste0("Enrichment:"),
type = "bar",
orientation = 'h',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE
)
) %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
View(data)
view(data@misc[["IC_1"]][["en"]][["GO_Biological_Process_2015"]])
View(data@misc[["IC_1"]][["en"]][["GO_Biological_Process_2015"]])
View(data@misc[["IC_1"]][["en"]][["CellMarker_Augmented_2021"]])
fig <- plot_ly(type = "bar", orientation = 'h', mode = 'markers')
fig %>% add_trace(
x = x,
y = y,
text = c("Text A", "Text B", "Text C", "Text D", "Text E"),
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
fig <- plot_ly(type = "bar", orientation = 'h', mode = 'markers')
print(fig)
fig <- plot_ly(type = "bar", orientation = 'h', mode = 'markers')
fig %>% add_trace(
x = x,
y = y,
text = c("Text A", "Text B", "Text C", "Text D", "Text E"),
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig %>% add_trace(
x = x,
y = y,
text = x,
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig %>% add_trace(
x = x,
y = y,
text = y,
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- plot_ly(type = "bar", orientation = 'h', mode = 'markers')
fig %>% add_trace(
x = x,
y = y,
text = y,
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
) %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
fig <- plot_ly(type = "bar", orientation = 'h', mode = 'markers')
fig %>% add_trace(
x = x,
y = y,
text = y,
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
) %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
x <- table["Overlap"][1:30,]
y <- table["Term"][1:30,]
fig <- plot_ly(type = "bar", orientation = 'h', mode = 'markers')
fig %>% add_trace(
x = x,
y = y,
text = y,
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
) %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
fig <- plot_ly(type = "bar", orientation = 'h', mode = 'markers')
fig <- fig %>% add_trace(
x = x,
y = y,
text = y,
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
fig <- plot_ly(type = "bar", orientation = 'h')
fig <- fig %>% add_trace(
x = x,
y = y,
text = y,
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
fig <- plot_ly(type = "bar", orientation = 'h')
fig <- fig %>% add_trace(
x = x,
y = y,
text = paste0(~y),
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
fig <- plot_ly(type = "bar", orientation = 'h')
fig <- fig %>% add_trace(
x = x,
y = y,
text = paste0(y),
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
fig <- fig %>% add_trace(
x = x,
y = y,
text = paste0(y,"\nP-value",),
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
fig <- plot_ly(type = "bar", orientation = 'h')
fig <- fig %>% add_trace(
x = x,
y = y,
text = paste0(y,"\nP-value"),
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
fig <- plot_ly(type = "bar", orientation = 'h')
fig <- fig %>% add_trace(
x = x,
y = y,
text = paste0(y,"\nP-value:",table["Adjusted.P.value"][1:30,]),
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
data <- readRDS("/home/c_thuilliez/Desktop/Project/data.rds")
table <- data@misc[[IC_C]]$en[[database_C]]
number_of_genes <- table["Overlap"]
table["Overlap"] <- lapply(table["Overlap"], sub, pattern="/.*", replacement="")
x <- table["Overlap"][1:30,]
y <- table["Term"][1:30,]
fig <- plot_ly(type = "bar", orientation = 'h')
fig <- fig %>% add_trace(
x = x,
y = y,
hovertext = paste0(y,"\nnumber of genes: ", number_of_genes,"\nP-value: ",table["Adjusted.P.value"][1:30,]),
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
fig <- fig %>% add_trace(
x = x,
y = y,
hovertext = paste0(y,"\nnumber of genes: ", number_of_genes[1:30,],"\nP-value: ",table["Adjusted.P.value"][1:30,]),
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
fig <- fig %>% add_trace(
x = x,
y = y,
hovertext = paste0(y,"\nnumber of genes: ", number_of_genes[1:30,],"\nP-value: ",round(table["Adjusted.P.value"][1:30,], digits = 2)),
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
fig <- fig %>% add_trace(
x = x,
y = y,
hovertext = paste0(y,"\nnumber of genes: ", number_of_genes[1:30,],"\nP-value: ",table["Adjusted.P.value"][1:30,]),
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
fig <- plot_ly(type = "bar", orientation = 'h')
fig <- fig %>% add_trace(
x = x,
y = y,
hovertext = paste0(y,"\nnumber of genes: ", number_of_genes[1:30,],"\nP-value: ",table["Adjusted.P.value"][1:30,]),
hoverinfo = 'text',
marker = list(color = table["Adjusted.P.value"][1:30,], colorscale = "Viridis",
colorbar = list(title = "P-value"), showscale = TRUE, reversescale=TRUE)
)
fig <- fig %>% layout(yaxis = list(title = 'Enrichment', tickfont = list(size = 7)),
xaxis = list(title = 'Nb genes', tickfont = list(size = 10))
)
print(fig)
launchShiny()
launchShiny()
launchShiny()
launchShiny()
