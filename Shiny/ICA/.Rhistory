, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
View(ic_types)
#type=c(48,13,18,26)
type=c(1,2,3,4)
ic_types=data@reductions$ica@cell.embeddings[,type]
ic_types<-apply(ic_types,2,function(x){x=ifelse(x<=0,0,x); return(x)})
#We normalize by the sum
sum_IC<-apply(ic_types,2,function(x){x=x/sum(x); return(x)})
#we calculate the factor of size to reduce pie size where IC are low
sum_IC=sqrt((rowSums(sum_IC)/max(rowSums(sum_IC))))
#ic_types<-apply(ic_types,1,function(x){x/sum(x); return(x)})
# We build the final object
ic_types<-cbind(data@images$slice1@coordinates,ic_types) %>%  cbind(.,sum_IC)
ic_types <- ic_types[rowSums(ic_types[,5:2+length(type)])>0,]
s <- SpatialDimPlot(data)
s
ic_types[rownames(s$data),]["row"] <- s$data$imagerow
ic_types[rownames(s$data),]["col"] <- s$data$imagecol
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
col_coordinates = (ic_types[i,"col"])/max(ic_types["col"])
row_coordinates = (ic_types[i,"row"])/max(ic_types["row"])
x = c(col_coordinates-(ic_types[i,"sum_IC"]/20),col_coordinates+ic_types[i,"sum_IC"]/20)
y = c(row_coordinates-(ic_types[i,"sum_IC"]/20),row_coordinates+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
View(ic_types)
#type=c(48,13,18,26)
type=c(1,2,3,4)
ic_types=data@reductions$ica@cell.embeddings[,type]
ic_types<-apply(ic_types,2,function(x){x=ifelse(x<=0,0,x); return(x)})
#We normalize by the sum
sum_IC<-apply(ic_types,2,function(x){x=x/sum(x); return(x)})
#we calculate the factor of size to reduce pie size where IC are low
sum_IC=sqrt((rowSums(sum_IC)/max(rowSums(sum_IC))))
#ic_types<-apply(ic_types,1,function(x){x/sum(x); return(x)})
# We build the final object
ic_types<-cbind(data@images$slice1@coordinates,ic_types) %>%  cbind(.,sum_IC)
ic_types <- ic_types[rowSums(ic_types[,5:2+length(type)])>0,]
ic_types[rownames(s$data),]["row"] <- s$data$imagerow
ic_types[rownames(s$data),]["col"] <- s$data$imagecol
View(s)
s$data
s$data$AAACAACGAATAGTTC-1
s$data[AAACAACGAATAGTTC-1,]
s$data["AAACAACGAATAGTTC-1",]
ic_types["AAACAACGAATAGTTC-1",]
#type=c(48,13,18,26)
type=c(1,2,3,4)
ic_types=data@reductions$ica@cell.embeddings[,type]
ic_types<-apply(ic_types,2,function(x){x=ifelse(x<=0,0,x); return(x)})
#We normalize by the sum
sum_IC<-apply(ic_types,2,function(x){x=x/sum(x); return(x)})
#we calculate the factor of size to reduce pie size where IC are low
sum_IC=sqrt((rowSums(sum_IC)/max(rowSums(sum_IC))))
#ic_types<-apply(ic_types,1,function(x){x/sum(x); return(x)})
# We build the final object
ic_types<-cbind(data@images$slice1@coordinates,ic_types) %>%  cbind(.,sum_IC)
ic_types <- ic_types[rowSums(ic_types[,5:2+length(type)])>0,]
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
col_coordinates = (ic_types[i,"col"])/max(ic_types["col"])
row_coordinates = (ic_types[i,"row"])/max(ic_types["row"])
x = c(col_coordinates-(ic_types[i,"sum_IC"]/20),col_coordinates+ic_types[i,"sum_IC"]/20)
y = c(row_coordinates-(ic_types[i,"sum_IC"]/20),row_coordinates+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
images = list(
source = raster2uri(raster::as.raster(flipImage(rotateFixed(data@images$slice1@image, 180), mode = "horizontal"))),
xref = 'paper',
yref =  'paper',
sizex = 1,
sizey = 1,
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = 0,
y = 1,
yanchor = 'top',
xanchor = 'left'
)
)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=TRUE),
showlegend = TRUE
)
print(fig)
ic_types["TAGTTTGATCGGG-1",]
View(ic_types)
nrow(data@images$slice1@image)
picture_row = nrow(data@images$slice1@image)
picture_col = nrow(data@images$slice1@image)
picture_col = ncol(data@images$slice1@image)
plot_row = max(ic_types[i,"row"])
plot_row = max(ic_types[i,"col"])
plot_row = max(ic_types[i,"row"])
plot_col = max(ic_types[i,"col"])
#type=c(48,13,18,26)
type=c(1,2,3,4)
ic_types=data@reductions$ica@cell.embeddings[,type]
ic_types<-apply(ic_types,2,function(x){x=ifelse(x<=0,0,x); return(x)})
#We normalize by the sum
sum_IC<-apply(ic_types,2,function(x){x=x/sum(x); return(x)})
#we calculate the factor of size to reduce pie size where IC are low
sum_IC=sqrt((rowSums(sum_IC)/max(rowSums(sum_IC))))
#ic_types<-apply(ic_types,1,function(x){x/sum(x); return(x)})
# We build the final object
ic_types<-cbind(data@images$slice1@coordinates,ic_types) %>%  cbind(.,sum_IC)
ic_types <- ic_types[rowSums(ic_types[,5:2+length(type)])>0,]
picture_row = nrow(data@images$slice1@image)
picture_col = ncol(data@images$slice1@image)
plot_row = max(ic_types[i,"row"])
plot_col = max(ic_types[i,"col"])
plot_row = max(ic_types["row"])
plot_col = max(ic_types["col"])
plot_row = (ic_types["col"])/max(ic_types["row"])
View(plot_row)
plot_row = max((ic_types["col"])/max(ic_types["row"]))
picture_row = nrow(data@images$slice1@image)
picture_col = ncol(data@images$slice1@image)
plot_row = max((ic_types["row"])/max(ic_types["row"]))
plot_col = max((ic_types["col"])/max(ic_types["col"]))
col_coordinates = (ic_types[i,"col"])
row_coordinates = (ic_types[i,"row"])
x = c(col_coordinates-(ic_types[i,"sum_IC"]/20),col_coordinates+ic_types[i,"sum_IC"]/20)
y = c(row_coordinates-(ic_types[i,"sum_IC"]/20),row_coordinates+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
for (i in 1:nrow(ic_types)) {
r=sum_IC
col_coordinates = (ic_types[i,"col"])
row_coordinates = (ic_types[i,"row"])
x = c(col_coordinates-(ic_types[i,"sum_IC"]/20),col_coordinates+ic_types[i,"sum_IC"]/20)
y = c(row_coordinates-(ic_types[i,"sum_IC"]/20),row_coordinates+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
images = list(
source = raster2uri(raster::as.raster(flipImage(rotateFixed(data@images$slice1@image, 180), mode = "horizontal"))),
xref = 'paper',
yref =  'paper',
sizex = 1,
sizey = 1,
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = 0,
y = 1,
yanchor = 'top',
xanchor = 'left'
)
)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=TRUE),
showlegend = TRUE
)
print(fig)
plot_row = ic_types["row"]
plot_row = length(ic_types["row"])
plot_col = length(ic_types["col"])
plot_row = max(ic_types["row"])
plot_col = max(ic_types["col"])
plot_row = max(ic_types["row"])
plot_col = max(ic_types["col"])
plot_row = max(ic_types["row"])
plot_col = max(ic_types["col"])
View(s)
fig <- plot_ly(type = 'scatter')
for (i in 1:nrow(ic_types)) {
r=sum_IC
col_coordinates = (ic_types[i,"col"])
row_coordinates = (ic_types[i,"row"])
x = c(col_coordinates-(ic_types[i,"sum_IC"]/20),col_coordinates+ic_types[i,"sum_IC"]/20)
y = c(row_coordinates-(ic_types[i,"sum_IC"]/20),row_coordinates+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
images = list(
source = raster2uri(raster::as.raster(flipImage(rotateFixed(data@images$slice1@image, 180), mode = "horizontal"))),
xref = 'paper',
yref =  'paper',
sizex = 1,
sizey = 1,
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = 0,
y = 1,
yanchor = 'top',
xanchor = 'left'
)
)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=TRUE),
showlegend = TRUE
)
print(fig)
data <- Launch_analysis()
#type=c(48,13,18,26)
type=c(1,2,3,4)
ic_types=data@reductions$ica@cell.embeddings[,type]
ic_types<-apply(ic_types,2,function(x){x=ifelse(x<=0,0,x); return(x)})
#We normalize by the sum
sum_IC<-apply(ic_types,2,function(x){x=x/sum(x); return(x)})
#we calculate the factor of size to reduce pie size where IC are low
sum_IC=sqrt((rowSums(sum_IC)/max(rowSums(sum_IC))))
#ic_types<-apply(ic_types,1,function(x){x/sum(x); return(x)})
# We build the final object
ic_types<-cbind(data@images$slice1@coordinates,ic_types) %>%  cbind(.,sum_IC)
ic_types <- ic_types[rowSums(ic_types[,5:2+length(type)])>0,]
picture_row = nrow(data@images$slice1@image)
picture_col = ncol(data@images$slice1@image)
plot_row = max(ic_types["row"])
plot_col = max(ic_types["col"])
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
col_coordinates = (ic_types[i,"col"])/max(ic_types["col"])
row_coordinates = (ic_types[i,"row"])/max(ic_types["row"])
x = c(col_coordinates-(ic_types[i,"sum_IC"]/20),col_coordinates+ic_types[i,"sum_IC"]/20)
y = c(row_coordinates-(ic_types[i,"sum_IC"]/20),row_coordinates+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
image <- cropImage(data@images$slice1@image, new_width =500, new_height = 500, type = 'equal_spaced')
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
images = list(
source = raster2uri(raster::as.raster(flipImage(rotateFixed(data@images$slice1@image, 180), mode = "horizontal"))),
xref = 'paper',
yref =  'paper',
sizex = 1,
sizey = 1,
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = 0,
y = 1,
yanchor = 'top',
xanchor = 'left'
)
)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=TRUE),
showlegend = TRUE
)
print(fig)
image <- cropImage(data@images$slice1@image, new_width =500, new_height = 500, type = 'equal_spaced')
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
images = list(
source = raster2uri(raster::as.raster(flipImage(rotateFixed(data@images$slice1@image, 180), mode = "horizontal"))),
xref = 'paper',
yref =  'paper',
sizex = 1,
sizey = 1,
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = 0,
y = 1,
yanchor = 'top',
xanchor = 'left'
)
)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=TRUE),
showlegend = TRUE
)
print(fig)
image <- cropImage(data@images$slice1@image, new_width =500, new_height = 500, type = 'equal_spaced')
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
images = list(
source = raster2uri(raster::as.raster(flipImage(rotateFixed(image, 180), mode = "horizontal"))),
xref = 'paper',
yref =  'paper',
sizex = 1,
sizey = 1,
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = 0,
y = 1,
yanchor = 'top',
xanchor = 'left'
)
)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=TRUE),
showlegend = TRUE
)
print(fig)
image <- cropImage(data@images$slice1@image, new_width =450, new_height = 480, type = 'equal_spaced')
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
images = list(
source = raster2uri(raster::as.raster(flipImage(rotateFixed(image, 180), mode = "horizontal"))),
xref = 'paper',
yref =  'paper',
sizex = 1,
sizey = 1,
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = 0,
y = 1,
yanchor = 'top',
xanchor = 'left'
)
)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=TRUE),
showlegend = TRUE
)
print(fig)
image <- cropImage(data@images$slice1@image, new_width =500, new_height = 500, type = 'equal_spaced')
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
images = list(
source = raster2uri(raster::as.raster(flipImage(rotateFixed(image, 180), mode = "horizontal"))),
xref = 'paper',
yref =  'paper',
sizex = 1,
sizey = 1,
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = 0,
y = 1,
yanchor = 'top',
xanchor = 'left'
)
)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=TRUE),
showlegend = TRUE
)
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
col_coordinates = (ic_types[i,"col"])/max(ic_types["col"])
row_coordinates = (ic_types[i,"row"])/max(ic_types["row"])
x = c(col_coordinates-(ic_types[i,"sum_IC"]/20),col_coordinates+ic_types[i,"sum_IC"]/20)
y = c(row_coordinates-(ic_types[i,"sum_IC"]/20),row_coordinates+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
images = list(
source = raster2uri(raster::as.raster(flipImage(rotateFixed(data@images$slice1@image, 180), mode = "horizontal"))),
xref = 'paper',
yref =  'paper',
sizex = 1,
sizey = 1,
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = 0,
y = 1,
yanchor = 'top',
xanchor = 'left'
)
)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=TRUE),
showlegend = TRUE, scene = list(
aspectratio=list(x = 0.5, y = 0.5)
)
)
print(fig)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE, autorange=TRUE),
showlegend = TRUE, scene = list(
aspectratio=list(x = 1, y = 0.5)
)
)
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
col_coordinates = (ic_types[i,"col"])/max(ic_types["col"])
row_coordinates = (ic_types[i,"row"])/max(ic_types["row"])
x = c(col_coordinates-(ic_types[i,"sum_IC"]/20),col_coordinates+ic_types[i,"sum_IC"]/20)
y = c(row_coordinates-(ic_types[i,"sum_IC"]/20),row_coordinates+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
images = list(
source = raster2uri(raster::as.raster(flipImage(rotateFixed(data@images$slice1@image, 180), mode = "horizontal"))),
xref = 'paper',
yref =  'paper',
sizex = 1,
sizey = 1,
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = 0,
y = 1,
yanchor = 'top',
xanchor = 'left'
), scene = list(
aspectratio=list(x = 1, y = 0.5)
)
)
print(fig)
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
col_coordinates = (ic_types[i,"col"])/max(ic_types["col"])
row_coordinates = (ic_types[i,"row"])/max(ic_types["row"])
x = c(col_coordinates-(ic_types[i,"sum_IC"]/20),col_coordinates+ic_types[i,"sum_IC"]/20)
y = c(row_coordinates-(ic_types[i,"sum_IC"]/20),row_coordinates+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig <- fig %>% add_trace(type="image", source = raster2uri(raster::as.raster(flipImage(rotateFixed(data@images$slice1@image, 180), mode = "horizontal")))
)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
images = list(
source = raster2uri(raster::as.raster(flipImage(rotateFixed(data@images$slice1@image, 180), mode = "horizontal"))),
xref = 'paper',
yref =  'paper',
sizex = 1,
sizey = 1,
sizing = 'stretch',
opacity = 1,
layer= 'below',
x = 0,
y = 1,
yanchor = 'top',
xanchor = 'left'
), scene = list(
aspectratio=list(x = 1, y = 0.5)
)
)
print(fig)
picture_row = nrow(data@images$slice1@image)
picture_col = ncol(data@images$slice1@image)
plot_row = max(ic_types["row"])
plot_col = max(ic_types["col"])
fig <- plot_ly(type = 'pie')
for (i in 1:nrow(ic_types)) {
r=sum_IC
col_coordinates = (ic_types[i,"col"])/max(ic_types["col"])
row_coordinates = (ic_types[i,"row"])/max(ic_types["row"])
x = c(col_coordinates-(ic_types[i,"sum_IC"]/20),col_coordinates+ic_types[i,"sum_IC"]/20)
y = c(row_coordinates-(ic_types[i,"sum_IC"]/20),row_coordinates+ic_types[i,"sum_IC"]/20)
fig <- fig %>% add_pie(data = ic_types, labels = colnames(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)])
, values = as.double(ic_types[i,5:2+length(type)][which(ic_types[i,5:2+length(type)] != 0)]),
name = rownames(ic_types[i,]), domain = list(x = x, y = y),
showlegend = TRUE, text = NULL, textposition = "none")
}
fig <- fig %>% add_trace(type="image", source = raster2uri(raster::as.raster(flipImage(rotateFixed(data@images$slice1@image, 180), mode = "horizontal")))
)
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
#                        images = list(
#                          source = raster2uri(raster::as.raster(flipImage(rotateFixed(data@images$slice1@image, 180), mode = "horizontal"))),
#                          xref = 'paper',
#                          yref =  'paper',
#                          sizex = 1,
#                          sizey = 1,
#                         sizing = 'stretch',
#                          opacity = 1,
#                          layer= 'below',
#                          x = 0,
#                          y = 1,
#                           yanchor = 'top',
#                          xanchor = 'left'
#                        ),
scene = list(
aspectratio=list(x = 1, y = 0.5)
)
)
print(fig)
