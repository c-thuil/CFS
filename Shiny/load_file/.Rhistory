launchShiny <- function(
mode = "open",
maxFileSize = 15000,
file_to_load = NULL,
welcome_message = NULL,
projections_show_hover_info = TRUE,
...
){
##--------------------------------------------------------------------------##
## Create global variable with options that need to be available inside the
## Shiny app.
##--------------------------------------------------------------------------##
Shiny.options <<- list(
"mode" = mode,
"file_to_load" = file_to_load,
"welcome_message" = welcome_message,
"shiny_root" = "C:\\Users\\corey\\OneDrive\\Bureau\\scRNAS_CT/Shiny/",
"projections_show_hover_info" = projections_show_hover_info
)
##--------------------------------------------------------------------------##
## Allow upload of files up to 800 MB.
##--------------------------------------------------------------------------##
options(shiny.maxRequestSize = maxFileSize * 1024^2)
##--------------------------------------------------------------------------##
## Load server and UI functions.
##--------------------------------------------------------------------------##
source(
"C:\\Users\\corey\\OneDrive\\Bureau\\scRNAS_CT/Shiny/shiny_UI.R",
local = TRUE
)
source(
"C:\\Users\\corey\\OneDrive\\Bureau\\scRNAS_CT/Shiny/shiny_server.R",
local = TRUE
)
##--------------------------------------------------------------------------##
## Launch Shiny.
##--------------------------------------------------------------------------##
message(
paste0(
'##---------------------------------------------------------------------------##\n',
'## Launching Shiny\n',
'##---------------------------------------------------------------------------##'
)
)
shiny::shinyApp(
ui = ui,
server = server,
...
)
}
View(launchShiny)
data = readRDS('C:\\Users\\corey\\OneDrive\\Bureau\\data.RDS')
launchShiny()
View(data)
type = c('IC_1','IC_2','IC_3')
ic_types=data@reductions$ica@cell.embeddings[,type]
img<-grDevices::as.raster(data@images$slice1@image)
l=length(type)
if(l>1){
ic_types<-apply(ic_types,2,function(x){x=ifelse(x<=0,0,x); return(x)})
sum_IC<-apply(ic_types,2,function(x){x=x/sum(x); return(x)})
sum_IC=sqrt((rowSums(sum_IC)/max(rowSums(sum_IC))))
ic_types<-apply(ic_types,1,function(x){x/sum(x); return(x)})
ic_types<-cbind(data@images$slice1@coordinates,t(ic_types)) %>%  cbind(.,sum_IC) %>% as.tibble
grid=interp(ic_types$imagecol,ic_types$imagerow,ic_types$sum_IC)
griddf <- data.frame(x = rep(grid$x, ncol(grid$z)),
y = rep(grid$y, each = nrow(grid$z)),
z = as.numeric(grid$z))
griddf$z2=ifelse(griddf$z<quantile(griddf$z,na.rm = TRUE,probs = seq(0, 1, 1/10))[2],0,griddf$z)
# pie chart
p<-   ggplot( data = ic_types,aes(x = imagecol, y = imagerow)) +
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf) +
geom_scatterpie(data = ic_types,
aes(x = imagecol, y = (-imagerow),
r=sum_IC*200),
cols = paste0("IC_",type),
color=NA) +
coord_equal()+
theme_void()
#
p1<-   ggplot( data = ic_types,aes(x = imagecol, y = imagerow)) +
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf)+
geom_contour(data = griddf,aes(x = x, y = (-y) , z=z2),breaks = thresh)  +
geom_contour_filled(data = griddf,aes(x = x, y = (-y) , z=z2),alpha=thresh.alpha, breaks = c(thresh,1), fill="blue")+
coord_equal()+
theme_void()
p2<- ggplot(data = ic_types,aes(x = imagecol, y = imagerow))+
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf) +
geom_contour_filled(data = griddf,aes(x = x, y = (-y) , z=z)) +
coord_equal()+
theme_void()
p3<- ggplot(data = griddf,aes(x = x, y = (-y) , z=z2))+
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf) +
geom_contour(breaks = thresh) +
geom_contour_filled(alpha=thresh.alpha, breaks = c(thresh,1), fill="blue")+
coord_equal()+
theme_void()
}
ic_types<-apply(ic_types,2,function(x){x=ifelse(x<=0,0,x); return(x)})
sum_IC<-apply(ic_types,2,function(x){x=x/sum(x); return(x)})
sum_IC=sqrt((rowSums(sum_IC)/max(rowSums(sum_IC))))
ic_types<-apply(ic_types,1,function(x){x/sum(x); return(x)})
ic_types<-cbind(data@images$slice1@coordinates,t(ic_types)) %>%  cbind(.,sum_IC) %>% as.tibble
grid=interp(ic_types$imagecol,ic_types$imagerow,ic_types$sum_IC)
ic_types=data@reductions$ica@cell.embeddings[,type]
img<-grDevices::as.raster(data@images$slice1@image)
l=length(type)
ic_types<-apply(ic_types,2,function(x){x=ifelse(x<=0,0,x); return(x)})
sum_IC<-apply(ic_types,2,function(x){x=x/sum(x); return(x)})
sum_IC=sqrt((rowSums(sum_IC)/max(rowSums(sum_IC))))
ic_types<-apply(ic_types,1,function(x){x/sum(x); return(x)})
ic_types<-cbind(data@images$slice1@coordinates,t(ic_types)) %>%  cbind(.,sum_IC) %>% as.tibble
grid=interp(ic_types$imagecol,ic_types$imagerow,ic_types$sum_IC)
griddf <- data.frame(x = rep(grid$x, ncol(grid$z)),
y = rep(grid$y, each = nrow(grid$z)),
z = as.numeric(grid$z))
griddf$z2=ifelse(griddf$z<quantile(griddf$z,na.rm = TRUE,probs = seq(0, 1, 1/10))[2],0,griddf$z)
# pie chart
p<-   ggplot( data = ic_types,aes(x = imagecol, y = imagerow)) +
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf) +
geom_scatterpie(data = ic_types,
aes(x = imagecol, y = (-imagerow),
r=sum_IC*200),
cols = paste0("IC_",type),
color=NA) +
coord_equal()+
theme_void()
#
p1<-   ggplot( data = ic_types,aes(x = imagecol, y = imagerow)) +
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf)+
geom_contour(data = griddf,aes(x = x, y = (-y) , z=z2),breaks = thresh)  +
geom_contour_filled(data = griddf,aes(x = x, y = (-y) , z=z2),alpha=thresh.alpha, breaks = c(thresh,1), fill="blue")+
coord_equal()+
theme_void()
thresh=0.4
thresh.alpha=0.2
# pie chart
p<-   ggplot( data = ic_types,aes(x = imagecol, y = imagerow)) +
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf) +
geom_scatterpie(data = ic_types,
aes(x = imagecol, y = (-imagerow),
r=sum_IC*200),
cols = paste0("IC_",type),
color=NA) +
coord_equal()+
theme_void()
type
type = c(1,2,3)
# pie chart
p<-   ggplot( data = ic_types,aes(x = imagecol, y = imagerow)) +
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf) +
geom_scatterpie(data = ic_types,
aes(x = imagecol, y = (-imagerow),
r=sum_IC*200),
cols = paste0("IC_",type),
color=NA) +
coord_equal()+
theme_void()
#
p1<-   ggplot( data = ic_types,aes(x = imagecol, y = imagerow)) +
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf)+
geom_contour(data = griddf,aes(x = x, y = (-y) , z=z2),breaks = thresh)  +
geom_contour_filled(data = griddf,aes(x = x, y = (-y) , z=z2),alpha=thresh.alpha, breaks = c(thresh,1), fill="blue")+
coord_equal()+
theme_void()
p2<- ggplot(data = ic_types,aes(x = imagecol, y = imagerow))+
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf) +
geom_contour_filled(data = griddf,aes(x = x, y = (-y) , z=z)) +
coord_equal()+
theme_void()
p3<- ggplot(data = griddf,aes(x = x, y = (-y) , z=z2))+
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf) +
geom_contour(breaks = thresh) +
geom_contour_filled(alpha=thresh.alpha, breaks = c(thresh,1), fill="blue")+
coord_equal()+
theme_void()
p1
p2<- ggplot(data = ic_types,aes(x = imagecol, y = imagerow))+
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf) +
geom_contour_filled(data = griddf,aes(x = x, y = (-y) , z=z)) +
coord_equal()+
theme_void()
p2
p3
p1
p3
# Create plotly object
fig <- plot_ly(type = 'scatter',
mode='markers'
)
# Add image in the background
fig <- fig %>% add_trace(type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)), hoverinfo = "skip")
fig <- fig %>%
add_trace(
type = "contour",
x = griddf$x,
y = griddf$y,
z = griddf$z2,
showlegend = T,
contours = list(
end = 1,
size = 0.1,
start = input$Plot_thresh_density
),
opacity=input$Plot_thresh_alpha_density
)
fig <- fig %>% colorbar(title = "Cell type\ndensity")
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
autosize = TRUE
)
fig
fig <- fig %>%
add_trace(
type = "contour",
x = griddf$x,
y = griddf$y,
z = griddf$z2,
showlegend = T,
contours = list(
end = 1,
size = 0.1,
start = 0.3
),
opacity=0.5
)
fig <- fig %>% colorbar(title = "Cell type\ndensity")
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
autosize = TRUE
)
fig
fig = griddf$z
fig <- fig %>%
plot_ly(
type = 'densitymapbox',
lat = griddf$x,
lon = griddf$y,
coloraxis = 'coloraxis',
radius = 10)
fig <- fig %>%
layout(
mapbox = list(
style="stamen-terrain",
center= list(lon=180)), coloraxis = list(colorscale = "Viridis"))
# Create plotly object
fig <- plot_ly(type = 'scatter',
mode='markers'
)
# Add image in the background
fig <- fig %>% add_trace(type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)), hoverinfo = "skip")
fig <- fig %>% colorbar(title = "Cell type\ndensity")
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
autosize = TRUE
)
fig
#
p1<-   ggplot( data = ic_types,aes(x = imagecol, y = imagerow)) +
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf)+
geom_contour(data = griddf,aes(x = x, y = (-y) , z=z2),breaks = thresh)  +
geom_contour_filled(data = griddf,aes(x = x, y = (-y) , z=z2),alpha=thresh.alpha, breaks = c(thresh,1), fill="blue")+
coord_equal()+
theme_void()
p1
ggplotly(p1)
fig <- fig %>% ggplotly(p1)
# Add image in the background
fig <- fig %>% add_trace(type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)), hoverinfo = "skip")
fig <- fig %>% colorbar(title = "Cell type\ndensity")
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
autosize = TRUE
)
fig
fig <- fig %>% ggplotly(p1)
fig
fig <- ggplotly(p1)
# Add image in the background
fig <- fig %>% add_trace(type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)), hoverinfo = "skip")
fig <- fig %>% colorbar(title = "Cell type\ndensity")
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
autosize = TRUE
)
fig
l=length(type)
ic_types=values$data@reductions$ica@cell.embeddings[,type]
ic_types<-apply(ic_types,2,function(x){x=ifelse(x<=0,0,x); return(x)})
sum_IC<-apply(ic_types,2,function(x){x=x/sum(x); return(x)})
sum_IC=sqrt((rowSums(sum_IC)/max(rowSums(sum_IC))))
ic_types<-apply(ic_types,1,function(x){x/sum(x); return(x)})
ic_types<-cbind(GetTissueCoordinates(values$data),t(ic_types)) %>%  cbind(.,sum_IC)
grid=interp(ic_types$imagecol,ic_types$imagerow,ic_types$sum_IC)
l=length(type)
ic_types=values$data@reductions$ica@cell.embeddings[,type]
ic_types=data@reductions$ica@cell.embeddings[,type]
ic_types<-apply(ic_types,2,function(x){x=ifelse(x<=0,0,x); return(x)})
sum_IC<-apply(ic_types,2,function(x){x=x/sum(x); return(x)})
sum_IC=sqrt((rowSums(sum_IC)/max(rowSums(sum_IC))))
ic_types<-apply(ic_types,1,function(x){x/sum(x); return(x)})
ic_types<-cbind(GetTissueCoordinates(values$data),t(ic_types)) %>%  cbind(.,sum_IC)
ic_types<-cbind(GetTissueCoordinates(values$data),t(ic_types)) %>%  cbind(.,sum_IC)
ic_types
View(ic_types)
ic_types<-cbind(GetTissueCoordinates(values$data),t(ic_types)) %>%  cbind(.,sum_IC)
ic_types=values$data@reductions$ica@cell.embeddings[,type]
l=length(type)
ic_types=data@reductions$ica@cell.embeddings[,type]
ic_types<-apply(ic_types,2,function(x){x=ifelse(x<=0,0,x); return(x)})
sum_IC<-apply(ic_types,2,function(x){x=x/sum(x); return(x)})
sum_IC=sqrt((rowSums(sum_IC)/max(rowSums(sum_IC))))
ic_types<-apply(ic_types,1,function(x){x/sum(x); return(x)})
ic_types<-cbind(GetTissueCoordinates(data),t(ic_types)) %>%  cbind(.,sum_IC)
grid=interp(ic_types$imagecol,ic_types$imagerow,ic_types$sum_IC)
griddf <- data.frame(x = rep(grid$x, ncol(grid$z)),
y = rep(grid$y, each = nrow(grid$z)),
z = as.numeric(grid$z))
griddf$z2=ifelse(griddf$z<quantile(griddf$z,na.rm = TRUE,probs = seq(0, 1, 1/10))[2],0,griddf$z)
# Create plotly object
fig <- plot_ly(type = 'scatter',
mode='markers'
)
#
p1<-   ggplot( data = ic_types,aes(x = imagecol, y = imagerow)) +
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf)+
geom_contour(data = griddf,aes(x = x, y = (-y) , z=z2),breaks = thresh)  +
geom_contour_filled(data = griddf,aes(x = x, y = (-y) , z=z2),alpha=thresh.alpha, breaks = c(thresh,1), fill="blue")+
coord_equal()+
theme_void()
p1
fig <- ggplotly(p1)
# Add image in the background
fig <- fig %>% add_trace(type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)), hoverinfo = "skip")
fig <- fig %>% colorbar(title = "Cell type\ndensity")
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
autosize = TRUE
)
fig
#
p1<-   ggplot( data = ic_types,aes(x = imagecol, y = imagerow)) +
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf)+
geom_contour(data = griddf,aes(x = x, y = y , z=z2),breaks = thresh)  +
geom_contour_filled(data = griddf,aes(x = x, y = y , z=z2),alpha=thresh.alpha, breaks = c(thresh,1), fill="blue")+
coord_equal()+
theme_void()
fig <- ggplotly(p1)
# Add image in the background
fig <- fig %>% add_trace(type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)), hoverinfo = "skip")
fig <- fig %>% colorbar(title = "Cell type\ndensity")
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
autosize = TRUE
)
fig
# Create plotly object
fig <- plot_ly(type = 'scatter',
mode='markers'
)
# Add image in the background
fig <- fig %>% add_trace(type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)), hoverinfo = "skip")
fig <- fig %>%
add_trace(
type = "contour",
x = griddf$x,
y = griddf$y,
z = griddf$z2,
showlegend = T,
contours = list(
end = 1,
size = 0.1,
start = input$Plot_thresh_density
),
opacity=input$Plot_thresh_alpha_density
)
fig <- fig %>% colorbar(title = "Cell type\ndensity")
# Create plotly object
fig <- plot_ly(type = 'scatter',
mode='markers'
)
# Add image in the background
fig <- fig %>% add_trace(type="image", source = raster2uri(raster::as.raster(data@images$slice1@image)), hoverinfo = "skip")
fig <- fig %>%
add_trace(
type = "contour",
x = griddf$x,
y = griddf$y,
z = griddf$z2,
showlegend = T,
contours = list(
end = 1,
size = 0.1,
start = 0.4
),
opacity=0.5
)
fig <- fig %>% colorbar(title = "Cell type\ndensity")
fig <- fig %>% layout(xaxis=list(showgrid = FALSE, showticklabels=FALSE),
yaxis = list(showgrid = FALSE, showticklabels=FALSE),
autosize = TRUE
)
fig
launchShiny()
launchShiny()
launchShiny()
launchShiny()
launchShiny()
p1<-   ggplot( data = ic_types,aes(x = imagecol, y = imagerow)) +
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf)+
geom_contour(data = griddf,aes(x = x, y = y , z=z2),breaks = input$Plot_thresh_density)  +
coord_equal()+
theme_void()
p1<-   ggplot( data = ic_types,aes(x = imagecol, y = imagerow)) +
annotation_raster(img,xmin = 0,xmax = Inf,ymin = 0,ymax = Inf)+
geom_contour(data = griddf,aes(x = x, y = y , z=z2),breaks = 0.3)  +
coord_equal()+
theme_void()
p1
ic_types
ic_types$imagecol
ic_types
griddf
launchShiny()
